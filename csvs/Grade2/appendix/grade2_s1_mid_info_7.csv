숫자10 20,-,-,def return_2():엔터    return 10쉼표20엔터a쉼표b = return_2()엔터print(a쉼표b),_,,숫자10 20
Hi&Hi&Hi&,-,-,def call_func(func):엔터    for i in range(3):엔터        func()엔터def print_hi():엔터    print(큰따옴표Hi큰따옴표쉼표 end=큰따옴표&큰따옴표)엔터call_func(print_hi),_,,Hi&Hi&Hi&
[1쉼표 8쉼표 27쉼표 64쉼표 125],-,-,def square_3(item):엔터    return item ** 3엔터list_input = [1쉼표2쉼표3쉼표4쉼표5]엔터list_output = map(square_3쉼표 list_input)#맵이 반환하는 것은 이터레이터엔터print(list(list_output)),_,,[1쉼표 8쉼표 27쉼표 64쉼표 125]
[1쉼표 3쉼표 5쉼표 7],-,-,def is_odd(x):엔터    return x % 2 != 0엔터my_list = [1쉼표 2쉼표 3쉼표 4쉼표 5쉼표 6쉼표 7쉼표 8]엔터odd_list = list(filter(is_odd쉼표 my_list))엔터print(odd_list),_,,[1쉼표 3쉼표 5쉼표 7]
[1쉼표 4쉼표 9쉼표 16쉼표 25],-,-,list_input = [1쉼표2쉼표3쉼표4쉼표5]엔터list_output = map(lambda i:i*i쉼표 list_input)   #인라인람다엔터print(list(list_output)),_,,[1쉼표 4쉼표 9쉼표 16쉼표 25]
D A 1 E B 2 F C 3,-,-,def test():엔터    print(큰따옴표A큰따옴표쉼표 end=큰따옴표 큰따옴표)엔터    yield 1             #yield가 하나라도 들어가면 제너레이터가 된다.엔터    print(큰따옴표B큰따옴표쉼표 end=큰따옴표 큰따옴표)엔터    yield 2엔터    print(큰따옴표C큰따옴표쉼표 end=큰따옴표 큰따옴표)엔터    yield 3엔터# 함수를 호출합니다.엔터output = test()         #제너레이터 객체 생성엔터# next() 함수를 호출합니다.엔터print(큰따옴표D큰따옴표쉼표 end=큰따옴표 큰따옴표)엔터a = next(output)엔터print(a쉼표 end=큰따옴표 큰따옴표)엔터print(큰따옴표E큰따옴표쉼표 end=큰따옴표 큰따옴표)엔터b = next(output)엔터print(b쉼표 end=큰따옴표 큰따옴표)엔터print(큰따옴표F큰따옴표쉼표 end=큰따옴표 큰따옴표)엔터c = next(output)엔터print(c쉼표 end=큰따옴표 큰따옴표),_,,D A 1 E B 2 F C 3
